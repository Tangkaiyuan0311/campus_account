# configure database connection
spring.datasource.url = jdbc:mysql://localhost:3306/student_tracker
spring.datasource.username = springstudent
spring.datasource.password = springstudent

# configure server port
server.port = 8080

# configure global props referenced in application
AuthorName = kevin

spring.main.banner-mode = off

# logging.level.root = WARN
logging.level.root = INFO

# logging config for sql statement
logging.level.org.hibernate.SQL = debug
logging.level.org.hibernate.orm.jdbc.bind = trace

# table auto-create
# spring.jpa.hibernate.ddl-auto = none
# Hibernate will create the database schema through java code annotation by discarding all previous annotated data and tables.
spring.jpa.hibernate.ddl-auto = create

# expose some actuator endpoints:
management.endpoints.web.exposure.include = health, info
# expose all endpoints:
# management.endpoints.web.exposure.include = *
# exclude endpoints:
# management.endpoints.web.exposure.exclude = ...
management.info.env.enabled = true

# configure info env that will be exposed in the info endpoint
info.app.author = kevin
info.app.summary = learn spring rest and JPA

# configure spring security
# spring.security.user.name = kevin
# spring.security.user.password = 1999

# configure logging level mapping
# setting logging level based on hierarchical package name
# logging.level.org.springframework = DEBUG
# logging.level.org.springframework = INFO
# set log file name:
# logging.file = myLog.log

# configure context path
# server.servlet.context-path = /learn-spring

# default HTTP session timeout
server.servlet.session.timeout = 15m

# global config for lazy initialization for beans including rest-mvcController
# spring.main.lazy-initialization = true

# spring.data.rest.default-page-size=10

